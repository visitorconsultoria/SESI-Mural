{"ast":null,"code":"import { BehaviorSubject, timer } from 'rxjs';\nimport { map, catchError, switchMap } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class NoticeService {\n  constructor(http) {\n    this.http = http;\n    this.noticesSubject = new BehaviorSubject([]);\n    this.loadingSubject = new BehaviorSubject(false);\n    this.errorSubject = new BehaviorSubject(null);\n    this.notices$ = this.noticesSubject.asObservable();\n    this.loading$ = this.loadingSubject.asObservable();\n    this.error$ = this.errorSubject.asObservable();\n    // Iniciar busca automática a cada 5 minutos\n    this.startAutoRefresh();\n  }\n  startAutoRefresh() {\n    timer(0, 5 * 60 * 1000) // 0ms inicial, depois a cada 5 minutos\n    .pipe(switchMap(() => this.fetchNotices())).subscribe();\n  }\n  fetchNotices() {\n    this.loadingSubject.next(true);\n    this.errorSubject.next(null);\n    return this.http.get('/rest/api/cnsesi/v1/mensagens', {\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': 'Basic ' + btoa('admin:123456')\n      }\n    }).pipe(map(data => {\n      const mappedNotices = data.items.map(item => ({\n        id: `${item.Z0_FILIAL}-${item.Z0_ASSUNTO}-${Date.now()}`,\n        filial: item.Z0_FILIAL,\n        tipo: item.Z0_TIPO,\n        dataInicio: item.Z0_DTINI,\n        dataFim: item.Z0_DTFIM,\n        recorrencia: item.Z0_RECOR,\n        assunto: item.Z0_ASSUNTO,\n        titulo: item.Z0_TITULO,\n        mensagem: item.Z0_MSG,\n        tituloLink: item.Z0_TITLINK || undefined,\n        link: item.Z0_LINK || undefined,\n        tituloLink2: item.Z0_TILINK2 || undefined,\n        link2: item.Z0_LINK2 || undefined,\n        tituloLink3: item.Z0_TILINK3 || undefined,\n        link3: item.Z0_LINK3 || undefined,\n        // Campos derivados para compatibilidade\n        title: item.Z0_TITULO,\n        content: item.Z0_MSG,\n        priority: item.Z0_TIPO === 'P' ? 'Prioridade' : item.Z0_TIPO === 'A' ? 'Aviso' : 'Lembrete',\n        category: item.Z0_ASSUNTO,\n        date: item.Z0_DTINI,\n        author: 'SESI'\n      }));\n      this.noticesSubject.next(mappedNotices);\n      this.loadingSubject.next(false);\n      return mappedNotices;\n    }), catchError(error => {\n      this.errorSubject.next('Erro ao carregar avisos da API. Verifique a conexão.');\n      this.loadingSubject.next(false);\n      console.error('Erro ao buscar avisos:', error);\n      return [];\n    }));\n  }\n  refetch() {\n    this.fetchNotices().subscribe();\n  }\n  static {\n    this.ɵfac = function NoticeService_Factory(t) {\n      return new (t || NoticeService)(i0.ɵɵinject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: NoticeService,\n      factory: NoticeService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["BehaviorSubject","timer","map","catchError","switchMap","NoticeService","constructor","http","noticesSubject","loadingSubject","errorSubject","notices$","asObservable","loading$","error$","startAutoRefresh","pipe","fetchNotices","subscribe","next","get","headers","btoa","data","mappedNotices","items","item","id","Z0_FILIAL","Z0_ASSUNTO","Date","now","filial","tipo","Z0_TIPO","dataInicio","Z0_DTINI","dataFim","Z0_DTFIM","recorrencia","Z0_RECOR","assunto","titulo","Z0_TITULO","mensagem","Z0_MSG","tituloLink","Z0_TITLINK","undefined","link","Z0_LINK","tituloLink2","Z0_TILINK2","link2","Z0_LINK2","tituloLink3","Z0_TILINK3","link3","Z0_LINK3","title","content","priority","category","date","author","error","console","refetch","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["/home/project/src/app/services/notice.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable, BehaviorSubject, timer } from 'rxjs';\nimport { map, catchError, switchMap, startWith } from 'rxjs/operators';\nimport { Notice } from '../models/notice.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NoticeService {\n  private noticesSubject = new BehaviorSubject<Notice[]>([]);\n  private loadingSubject = new BehaviorSubject<boolean>(false);\n  private errorSubject = new BehaviorSubject<string | null>(null);\n\n  public notices$ = this.noticesSubject.asObservable();\n  public loading$ = this.loadingSubject.asObservable();\n  public error$ = this.errorSubject.asObservable();\n\n  constructor(private http: HttpClient) {\n    // Iniciar busca automática a cada 5 minutos\n    this.startAutoRefresh();\n  }\n\n  private startAutoRefresh(): void {\n    timer(0, 5 * 60 * 1000) // 0ms inicial, depois a cada 5 minutos\n      .pipe(\n        switchMap(() => this.fetchNotices())\n      )\n      .subscribe();\n  }\n\n  fetchNotices(): Observable<Notice[]> {\n    this.loadingSubject.next(true);\n    this.errorSubject.next(null);\n\n    return this.http.get<any>('/rest/api/cnsesi/v1/mensagens', {\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': 'Basic ' + btoa('admin:123456')\n      }\n    }).pipe(\n      map(data => {\n        const mappedNotices = data.items.map((item: any) => ({\n          id: `${item.Z0_FILIAL}-${item.Z0_ASSUNTO}-${Date.now()}`,\n          filial: item.Z0_FILIAL,\n          tipo: item.Z0_TIPO,\n          dataInicio: item.Z0_DTINI,\n          dataFim: item.Z0_DTFIM,\n          recorrencia: item.Z0_RECOR,\n          assunto: item.Z0_ASSUNTO,\n          titulo: item.Z0_TITULO,\n          mensagem: item.Z0_MSG,\n          tituloLink: item.Z0_TITLINK || undefined,\n          link: item.Z0_LINK || undefined,\n          tituloLink2: item.Z0_TILINK2 || undefined,\n          link2: item.Z0_LINK2 || undefined,\n          tituloLink3: item.Z0_TILINK3 || undefined,\n          link3: item.Z0_LINK3 || undefined,\n          // Campos derivados para compatibilidade\n          title: item.Z0_TITULO,\n          content: item.Z0_MSG,\n          priority: item.Z0_TIPO === 'P' ? 'Prioridade' : item.Z0_TIPO === 'A' ? 'Aviso' : 'Lembrete',\n          category: item.Z0_ASSUNTO,\n          date: item.Z0_DTINI,\n          author: 'SESI',\n        }));\n\n        this.noticesSubject.next(mappedNotices);\n        this.loadingSubject.next(false);\n        return mappedNotices;\n      }),\n      catchError(error => {\n        this.errorSubject.next('Erro ao carregar avisos da API. Verifique a conexão.');\n        this.loadingSubject.next(false);\n        console.error('Erro ao buscar avisos:', error);\n        return [];\n      })\n    );\n  }\n\n  refetch(): void {\n    this.fetchNotices().subscribe();\n  }\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}